{"version":3,"sources":["webpack:///./src/components/gallery/gallery-edits.js","webpack:///./src/pages/gallery-edits.js"],"names":["GalleryEditsComponent","basePath","useStaticQuery","images","allEditsSourcesYaml","sourcesMap","ytEdits","i","edges","length","node","name","externalVid","push","editItems","map","newLink","relativePath","key","ext","source","artist","sources","toString","link","edited","className","styles","imageContainer","data-fancybox","data-caption","href","pic","src","len","vid","ytlink","ytItem","thumbnail","window","jQuery","$","require","id","title","galleryMain","breakpointCols","default","1024","768","600","masonryGrid","columnClassName","masonryGridCol","GalleryEditsPage"],"mappings":"4MA+HeA,G,UAvHe,WA4C5B,IA3CA,IAAMC,EAAW,0BADiB,EAGMC,YAAe,cAA/CC,EAH0B,EAG1BA,OAAQC,EAHkB,EAGlBA,oBAuCZC,EAAa,GACbC,EAAU,GACNC,EAAI,EAAGA,EAAIH,EAAoBI,MAAMC,OAAQF,IAAK,CAAC,IACnDG,EAASN,EAAoBI,MAAMD,GAAnCG,KACW,OAAdA,EAAKC,KACNN,EAAWK,EAAKC,MAAQD,EACG,OAArBA,EAAKE,aACXN,EAAQO,KAAKH,GAGjB,IAAII,EAAYX,EAAOK,MAAMO,KAAI,YAAe,IAAZL,EAAW,EAAXA,KAC9BM,EAAU,2BAA6Bf,EAAWS,EAAKO,aAAe,kBACpEC,EAAMR,EAAKC,KAAOD,EAAKS,IAE7B,GAAGd,EAAWa,GAAM,CAClB,IAAME,EAASf,EAAWa,GAC1B,GAAoB,MAAjBE,EAAOC,OACRL,GAAW,SAAWI,EAAOC,YAC1B,GAAqB,MAAlBD,EAAOE,QAAiB,CAC9BN,GAAW,eACX,IAAI,IAAIT,EAAI,EAAGA,EAAIa,EAAOE,QAAQb,OAAQF,IACxCS,GAAW,6BAA+BI,EAAOE,QAAQf,GAAK,MAAQA,EAAE,GAAGgB,WAAa,YACnE,MAAfH,EAAOI,OACfR,GAAW,+BAAiCI,EAAOI,KAAO,gBAEzDJ,EAAOK,SACRT,GAAW,oBAAsBI,EAAOK,QAG5C,OACA,yBAAKP,IAAKR,EAAKO,aAAcS,UAAWC,IAAOC,gBAC7C,uBAAGC,gBAAc,UAAUC,eAAcd,EAASe,KAAM9B,EAAWS,EAAKO,cACtE,kBAAC,IAAD,CAAWS,UAAWC,IAAOK,IAAKC,IAAQhC,EAAL,oBAAiCS,EAAKC,KAAO,cAKlFuB,EAAMpB,EAAUL,OAEtB,IAAQF,EAAI,EAAGA,EAAID,EAAQG,OAAQF,IAAK,CACtC,IAAM4B,EAAM7B,EAAQC,GAChBS,EAAU,4BAA8BmB,EAAIC,OAAS,oBAEtDD,EAAIV,SACLT,GAAW,oBAAsBmB,EAAIV,QAEvC,IAAMY,EACJ,yBAAKnB,IAAKiB,EAAIC,OAAQV,UAAWC,IAAOC,gBACtC,uBAAGC,gBAAc,UAAUC,eAAcd,EAASe,KAAMI,EAAIC,QAC1D,kBAAC,IAAD,CAAWV,UAAWC,IAAOK,IAAKC,IAAKE,EAAIG,cAIjDxB,EAAUoB,EAAM3B,GAAK8B,EAGvB,GAAI,oBAAOE,OAAwB,CACjCA,OAAOC,OAASD,OAAOE,EAAIC,EAAQ,QAClBA,EAAQ,QAG3B,OACA,yBAAKC,GAAG,gBACN,wBAAIjB,UAAWC,IAAOiB,OAAtB,0CACA,yBAAKlB,UAAWC,IAAOkB,aACnB,kBAAC,IAAD,CACEC,eAzEqB,CAC3BC,QAAS,EACTC,KAAM,EACNC,IAAK,EACLC,IAAK,GAsECxB,UAAWC,IAAOwB,YAClBC,gBAAiBzB,IAAO0B,gBAEzBvC,OC7GMwC,UANU,kBACvB,kBAAC,IAAD,CAAeV,MAAM,0BACnB,kBAAC,EAAD","file":"component---src-pages-gallery-edits-js-fbb91acc94e04e3e50b9.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Masonry from 'react-masonry-css'\nimport ImageFade from '../image'\nimport styles from \"./gallery.module.scss\"\n\nimport $ from 'jquery' \n\nconst GalleryEditsComponent = () => {\n  const basePath = \"/assets/images/gallery/\";\n\n  const { images, allEditsSourcesYaml } = useStaticQuery(\n    graphql`\n    query {\n      images:allFile(filter: {\n        extension: {regex: \"/(jpg)|(jpeg)|(png)|(gif)/\"},\n        sourceInstanceName: {eq: \"gallery\"},\n        relativeDirectory: {eq: \"edits\"}})\n      {\n        edges {\n          node {\n            relativePath\n            name\n            ext\n          }\n        }\n      }\n\n      allEditsSourcesYaml {\n        edges {\n          node {\n            edited\n            link\n            name\n            sources\n            thumbnail\n            ytlink\n          }\n        }\n      }\n    }\n  `);\n\n  const breakpointColumnsObj = {\n    default: 4,\n    1024: 3,\n    768: 2,\n    600: 1\n  };\n\n  var sourcesMap = {};\n  var ytEdits = [];\n  for(var i = 0; i < allEditsSourcesYaml.edges.length; i++) {\n    var { node } = allEditsSourcesYaml.edges[i];\n    if(node.name !== null)\n      sourcesMap[node.name] = node;\n    else if(node.externalVid !== null)\n      ytEdits.push(node);\n  }\n\n  var editItems = images.edges.map(({ node }) => {\n    var newLink = \"<a target='_blank' href=\" + basePath + node.relativePath + \">Full Image</a>\";\n    const key = node.name + node.ext;\n\n    if(sourcesMap[key]) {\n      const source = sourcesMap[key];\n      if(source.artist != null)\n        newLink += \"</br> \" + source.artist;\n      else if(source.sources != null) {\n        newLink += \" - Sources: \";\n        for(var i = 0; i < source.sources.length; i++)\n          newLink += \" <a target='_blank' href='\" + source.sources[i] + \"'>\" + (i+1).toString() + \"</a>\";\n      } else if(source.link != null)\n        newLink += \" - <a target='_blank' href='\" + source.link + \"'>Source</a>\"\n      \n      if(source.edited)\n        newLink += \"</br> Edited by: \" + source.edited;\n    }\n\n    return(\n    <div key={node.relativePath} className={styles.imageContainer}>\n      <a data-fancybox=\"gallery\" data-caption={newLink} href={basePath + node.relativePath}>\n        <ImageFade className={styles.pic} src={`${basePath}thumbnails/edits/${node.name + \".jpg\"}`}/>\n      </a>\n    </div>)\n  });\n\n  const len = editItems.length;\n\n  for(var i = 0; i < ytEdits.length; i++) {\n    const vid = ytEdits[i];\n    var newLink = \"<a target='_blank' href='\" + vid.ytlink + \"'>Direct Link</a>\";\n\n    if(vid.edited)\n      newLink += \"</br> Edited by: \" + vid.edited;\n\n    const ytItem = (\n      <div key={vid.ytlink} className={styles.imageContainer}>\n        <a data-fancybox=\"gallery\" data-caption={newLink} href={vid.ytlink}>\n          <ImageFade className={styles.pic} src={vid.thumbnail}/>\n        </a>\n      </div>\n    );\n    editItems[len + i] = ytItem;\n  }\n\n  if (typeof window !== `undefined`) {\n    window.jQuery = window.$ = require('jquery');\n    const fancybox = require('@fancyapps/fancybox');\n  }\n\n  return(\n  <div id=\"editsGallery\">\n    <h1 className={styles.title}>Edited Official LN/Manga/Anime Artwork</h1>\n    <div className={styles.galleryMain}>\n        <Masonry\n          breakpointCols={breakpointColumnsObj}\n          className={styles.masonryGrid}\n          columnClassName={styles.masonryGridCol}\n        >\n        {editItems}\n        </Masonry>\n      </div>\n  </div>\n  )\n}\n\nexport default GalleryEditsComponent","import React from \"react\"\n\nimport GalleryLayout from \"../components/gallery/gallery-layout\"\nimport GalleryEditsComponent from \"../components/gallery/gallery-edits\"\n\nconst GalleryEditsPage = () => (\n  <GalleryLayout title=\"Edited Artwork Gallery\">\n    <GalleryEditsComponent />\n  </GalleryLayout>\n)\n\nexport default GalleryEditsPage"],"sourceRoot":""}